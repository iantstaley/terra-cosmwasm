{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "TerraQuery",
  "description": "TerraQuery is defines available query datas",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "swap"
      ],
      "properties": {
        "swap": {
          "type": "object",
          "required": [
            "ask_denom",
            "offer_coin"
          ],
          "properties": {
            "ask_denom": {
              "type": "string"
            },
            "offer_coin": {
              "$ref": "#/definitions/Coin"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "tax_rate"
      ],
      "properties": {
        "tax_rate": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "tax_cap"
      ],
      "properties": {
        "tax_cap": {
          "type": "object",
          "required": [
            "denom"
          ],
          "properties": {
            "denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "exchange_rates"
      ],
      "properties": {
        "exchange_rates": {
          "type": "object",
          "required": [
            "base_denom",
            "quote_denoms"
          ],
          "properties": {
            "base_denom": {
              "type": "string"
            },
            "quote_denoms": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "contract_info"
      ],
      "properties": {
        "contract_info": {
          "type": "object",
          "required": [
            "contract_address"
          ],
          "properties": {
            "contract_address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
